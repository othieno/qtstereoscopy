{"name":"QtStereoscopy","tagline":"A Qt module that adds support for stereoscopic displays.","body":"The QtStereoscopy module aims to provide support for stereoscopic  display devices\r\nto Qt applications. The full reference documentation, which includes a much more\r\ndetailed description, can be found [here][doc]\r\n\r\n\r\n### Requirements\r\n\r\nQtStereoscopy extends functionality added to the revised [QtGui][qtgui] module introduced in Qt5.\r\nAs such, prior versions of the Qt library are not supported. While the new QtGui module\r\nprovides a modern way of using the OpenGL API, it is still relatively new (as of September 2014)\r\nand a few features that exist in prior versions of Qt are still not fully implemented.\r\nOne such feature is a set of API calls that allows for access to the native display\r\ndevice (required by the Oculus SDK, for example). The current workaround is to use a part\r\nof the [Qt Platform Abstraction][qpa] (QPA) which is currently strongly-coupled to the\r\nversion of Qt it is built against. Ergo, this is not a portable solution but will very likely\r\nbecome one as the QPA API matures.\r\n\r\nAdditionally, the C++11 standard is heavily used. It stands to reason that a compiler that\r\nimplements the said standard, at least, is necessary.\r\n\r\n\r\n### Installing QtStereoscopy\r\n\r\nQtStereoscopy's build process is still not tied to Qt which means the usual way a Qt module\r\nis integrated into a project will not work. Instead, it relies on a set of project include\r\nfiles (*.pri), each of which specifies the build configuration for a specific set of\r\nstereoscopic display devices.\r\n\r\nStart by cloning the qtstereoscopy project then include one or more project include files (found in\r\nthe `install` directory) to a project file (*.pro). For example, to add support for Oculus VR devices,\r\nprepend `include(</path/to/qtstereoscopy>/install/oculusvr.pri)` where `</path/to/qtstereoscopy>` is\r\nqtstereoscopy's location.\r\n\r\nOnce this is done, simply include the header files (see [documentation][doc]) into your project,\r\nlike you would a regular Qt module; the build process will take care of the rest.\r\n\r\nCheck out the examples to see QtStereoscopy in action.\r\n\r\n[doc]:https://supranove.github.io/qtstereoscopy\r\n[qpa]:http://qt-project.org/wiki/Qt-Platform-Abstraction\r\n[qtgui]:http://qt-project.org/doc/qt-5/qtgui-index.html\r\n[travis]:https://travis-ci.org/supranove/qtstereoscopy\r\n[travis_badge]:https://travis-ci.org/supranove/qtstereoscopy.svg?branch=master\r\n[waffle]:http://waffle.io/supranove/qtstereoscopy\r\n[waffle_badge]:https://badge.waffle.io/supranove/qtstereoscopy.png?label=ready&title=Ready\r\n[coveralls]:https://coveralls.io/r/supranove/qtstereoscopy\r\n[coveralls_badge]:https://coveralls.io/repos/supranove/qtstereoscopy/badge.png\r\n[codeclimate]:https://codeclimate.com/github/supranove/qtstereoscopy\r\n[codeclimate_badge]:https://codeclimate.com/github/supranove/qtstereoscopy/badges/gpa.svg\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}