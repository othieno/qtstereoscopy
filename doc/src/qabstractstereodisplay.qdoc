/*!
   \class QAbstractStereoDisplay
   \inmodule QtStereoscopy

   \brief The QAbstractStereoDisplay class is the base class for all stereoscopic display device implementations.
*/
/*!
   \fn QString QAbstractStereoDisplay::productName() const
   \brief Returns the display's product name.
*/
/*!
   \fn QString QAbstractStereoDisplay::manufacturerName() const
   \brief Returns the display's manufacturer's name.
*/
/*!
   \fn QSize QAbstractStereoDisplay::resolution() const
   \brief Returns the display's resolution.
*/
/*!
   \fn QSize QAbstractStereoDisplay::eyeResolution() const
   \brief Returns the display's eye resolution, i.e. half of the total resolution.
*/
/*!
   \fn float QAbstractStereoDisplay::aspectRatio() const
   \brief Returns the display's aspect ratio, i.e. the ratio of horizontal to vertical resolution.
*/
/*!
   \fn unsigned int QAbstractStereoDisplay::refreshRate() const
   \brief Returns the display's refresh rate.
*/
/*!
   \fn float QAbstractStereoDisplay::interpupillaryDistance() const
   \brief Returns the display's current interpupillary distance (IPD) in millimeters.
*/
/*!
   \fn void QAbstractStereoDisplay::setInterpupillaryDistance(const float& value)
   \brief Sets the display's interpupillary distance (IPD) to the specified \a value in millimeters.
*/
/*!
   \fn float QAbstractStereoDisplay::userHeight() const
   \brief Returns the user's height in meters.
*/
/*!
   \fn void QAbstractStereoDisplay::setUserHeight(const float& value)
   \brief Sets the user's height to a specified \a value in meters.
*/
/*!
   \fn bool QAbstractStereoDisplay::orientationTrackingAvailable() const
   \brief Returns \c true if head orientation tracking is available, \c false otherwise.
*/
/*!
   \fn bool QAbstractStereoDisplay::orientationTrackingEnabled() const
   \brief Returns \c true if head orientation tracking is enabled, \c false otherwise.
*/
/*!
   \fn void QAbstractStereoDisplay::enableOrientationTracking(const bool enable)
   \brief If \a enable is set to \c true then orientation tracking is enabled, otherwise it is disabled.

   If the device does not support orientation tracking, then this member function does nothing.
*/
/*!
   \fn QQuaternion QAbstractStereoDisplay::headOrientation() const
   \brief Returns the display device's orientation quaternion.
*/
/*!
   \fn void QAbstractStereoDisplay::resetHeadOrientation()
   \brief Resets the display device's orientation.
*/
/*!
   \fn bool QAbstractStereoDisplay::positionalTrackingAvailable() const
   \brief Returns \c true if positional tracking is available, \c false otherwise.
*/
/*!
   \fn bool QAbstractStereoDisplay::positionalTrackingEnabled() const
   \brief Returns \c true if positional tracking is enabled, \c false otherwise.
*/
/*!
   \fn void QAbstractStereoDisplay::enablePositionalTracking(const bool enable)
   \brief If \a enable is set to \c true then positional tracking is enabled, otherwise it is disabled.
*/
/*!
   \fn QVector3D QAbstractStereoDisplay::headPosition() const
   \brief Returns the display device's head position. If positional tracking is disabled, then QVector3D(0, 0, 0) is returned.
*/
/*!
   \fn void QAbstractStereoDisplay::resetHeadPosition()
   \brief Resets the display device's position.
*/
/*!
   \fn bool QAbstractStereoDisplay::eyeTrackingAvailable() const
   \brief Returns \c true if eye tracking is available, \c false otherwise.
*/
/*!
   \fn bool QAbstractStereoDisplay::eyeTrackingEnabled() const
   \brief Returns \c true if eye tracking is enabled, \c false otherwise.
*/
/*!
   \fn void QAbstractStereoDisplay::enableEyeTracking(const bool enable)
   \brief If \a enable is set to \c true then eye tracking is enabled, otherwise it is disabled.
*/
/*!
   \fn QPoint QAbstractStereoDisplay::eyePosition() const
   \brief Returns the screen-space eye position.
*/
/*!
   \fn QPointF QAbstractStereoDisplay::normalizedEyePosition() const
   \brief Returns the normalized screen-space eye position.
*/
/*!
   \fn bool QAbstractStereoDisplay::available() const
   \brief Returns \c true if the display device's hardware is available, \c false otherwise.
*/
