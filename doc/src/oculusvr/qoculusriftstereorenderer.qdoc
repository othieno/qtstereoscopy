/*!
   \class QOculusRiftStereoRenderer
   \inmodule QtStereoscopy
   \brief The QOculusRiftStereoRenderer class extends QAbstractStereoRenderer functionality with support for the
   stereo rendering model used by the Oculus SDK.
*/
/*!
   \fn QOculusRiftStereoRenderer::QOculusRiftStereoRenderer(const unsigned int& index = 0, const bool& forceDebugDevice = false)
   \brief Constructs a QOculusRiftStereoRenderer that is attached to the Oculus Rift with the specified \a index.

   For debugging purposes, the renderer can be attached to a debug device by setting \a forceDebugDevice to \c true.
*/
/*!
   \fn void QOculusRiftStereoRenderer::apply()
   \brief Draws a scene with the stereoscopic model used by the Oculus Rift.
*/
/*!
   \fn void QOculusRiftStereoRenderer::swapBuffers(QOpenGLContext& context, QSurface& surface)
   \brief Overrides the default implementation to do nothing since the Oculus SDK handles buffer swapping (in SDK distortion mode).
   \span {style="display:none"}{\a context, \a surface}
*/
/*!
   \fn QOculusRift& QOculusRiftStereoRenderer::display();
   \brief Returns a reference to the Oculus Rift display device that is used by this renderer.
*/
/*!
   \fn const QOculusRift& QOculusRiftStereoRenderer::const_display() const;
   \brief Returns a const reference to the Oculus Rift display device that is used by this renderer.
*/
/*!
   \fn const float& QOculusRiftStereoRenderer::pixelDensity() const;
   \brief Returns the pixel density.
*/
/*!
   \fn void QOculusRiftStereoRenderer::setPixelDensity(const float& value)
   \brief Sets the pixel density to the specified \a value.
*/
/*!
   \fn bool QOculusRiftStereoRenderer::chromaticAberrationCorrectionEnabled() const
   \brief Returns \c true if chromatic aberration correction is enabled, \c false otherwise.
*/
/*!
   \fn void QOculusRiftStereoRenderer::enableChromaticAberrationCorrection(const bool enable)
   \brief If \a enable is set to \c true then chromatic aberration correction is enabled, otherwise it is disabled.
*/
/*!
   \fn bool QOculusRiftStereoRenderer::timewarpEnabled() const
   \brief Returns \c true if timewarp is enabled, \c false otherwise.
*/
/*!
   \fn void QOculusRiftStereoRenderer::enableTimewarp(const bool enable)
   \brief If \a enable is set to \c true then timewarp is enabled, otherwise it is disabled.
*/
/*!
   \fn bool QOculusRiftStereoRenderer::vignetteEnabled() const
   \brief Returns \c true if vignetting is enabled, \c false otherwise.
*/
/*!
   \fn void QOculusRiftStereoRenderer::enableVignette(const bool enable)
   \brief If \a enable is set to \c true then vignetting is enabled, otherwise it is disabled.
*/
/*!
   \fn void QOculusRiftStereoRenderer::freezeEyeUpdates(const ovrEyeType& eye, const bool freeze = true)
   \brief If \a freeze is set to \c true, updates for the specified \a eye are ignored.
*/
/*!
   \fn void QOculusRiftStereoRenderer::initializeWindow(const WId& windowId)
   \span {style="display:none"}{\a windowId}
*/
/*!
   \fn void QOculusRiftStereoRenderer::initializeGL()
*/
/*!
   \fn void QOculusRiftStereoRenderer::configureGL()
   \brief Configures the OpenGL context for use with the Oculus SDK.
*/
/*!
   \fn void QOculusRiftStereoRenderer::paintGL(const QStereoEyeCamera& camera, const float& dt)
   \span {style="display:none"}{\a camera \a dt}
*/
